package main

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"math/rand"
	"mime/multipart"
	"net/http"
	"time"
)

func main() {

	url := "https://aide.imagine.tech/api/v1/user-story"
	method := "POST"

	payload := &bytes.Buffer{}
	writer := multipart.NewWriter(payload)

	min := 3
	max := 10

	questions := []string{
		"Two Sum: Given an array of integers, return indices of the two numbers such that they add up to a specific target. Give me GoLang implementation for it.",
		"Reverse Integer: Reverse digits of an integer. Give me GoLang implementation for it.",
		"Palindrome Number: Determine whether an integer is a palindrome. Give me GoLang implementation for it.",
		"Roman to Integer: Convert a Roman numeral to an integer. Give me GoLang implementation for it.",
		"Longest Common Prefix: Find the longest common prefix string amongst an array of strings. Give me GoLang implementation for it.",
		"Valid Parentheses: Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. Give me GoLang implementation for it.",
		"Merge Two Sorted Lists: Merge two sorted linked lists and return it as a new sorted list. Give me GoLang implementation for it.",
		"Remove Duplicates from Sorted Array: Given a sorted array, remove the duplicates in-place such that each element appears only once and return the new length. Give me GoLang implementation for it.",
		"Remove Element: Given an array nums and a value val, remove all instances of that value in-place and return the new length. Give me GoLang implementation for it.",
		"Implement strStr(): Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack. Give me GoLang implementation for it.",
		"Search Insert Position: Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. Give me GoLang implementation for it.",
		"Count and Say: The count-and-say sequence is the sequence of integers with the first five terms as following: 1, 11, 21, 1211, 111221, ... Give me GoLang implementation for it.",
		"Maximum Subarray: Find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Give me GoLang implementation for it.",
		"Length of Last Word: Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word (last word means the last appearing word if we loop from left to right) in the string. Give me GoLang implementation for it.",
		"Plus One: Given a non-empty array of digits representing a non-negative integer, plus one to the integer. Give me GoLang implementation for it.",
		"Add Binary: Given two binary strings, return their sum (also a binary string). Give me GoLang implementation for it.",
		"Climbing Stairs: You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? Give me GoLang implementation for it.",
		"Sqrt(x): Compute and return the square root of x, where x is guaranteed to be a non-negative integer. Give me GoLang implementation for it.",
		"Merge Sorted Array: Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. Give me GoLang implementation for it.",
		"Valid Palindrome: Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. Give me GoLang implementation for it.",
		"Pascal's Triangle: Given a non-negative integer numRows, generate the first numRows of Pascal's triangle. Give me GoLang implementation for it.",
		"Best Time to Buy and Sell Stock: You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0. Give me GoLang implementation for it.",
		"Valid Anagram: Given two strings s and t , write a function to determine if t is an anagram of s. Give me GoLang implementation for it.",
		"Implement Queue using Stacks: Implement the following operations of a queue using stacks. Give me GoLang implementation for it.",
		"Intersection of Two Arrays II: Given two arrays, write a function to compute their intersection. Give me GoLang implementation for it.",
		"Fizz Buzz: Write a program that outputs the string representation of numbers from 1 to n. But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”. Give me GoLang implementation for it.",
		"Single Number: Given a non-empty array of integers, every element appears twice except for one. Find that single one. Give me GoLang implementation for it.",
		"Rotate Array: Given an array, rotate the array to the right by k steps, where k is non-negative. Give me GoLang implementation for it.",
		"Reverse Linked List: Reverse a singly linked list. Give me GoLang implementation for it.",
		"First Unique Character in a String: Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1. Give me GoLang implementation for it.",
		"Move Zeroes: Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements. Give me GoLang implementation for it.",
		"Majority Element: Given an array nums of size n, return the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times. Give me GoLang implementation for it.",
		"Excel Sheet Column Number: Given a column title as appear in an Excel sheet, return its corresponding column number. Give me GoLang implementation for it.",
		"Palindrome Linked List: Given a singly linked list, determine if it is a palindrome. Give me GoLang implementation for it.",
		"Intersection of Two Linked Lists: Write a program to find the node at which the intersection of two singly linked lists begins. Give me GoLang implementation for it.",
		"Two Sum II - Input array is sorted: Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number. Give me GoLang implementation for it.",
		"Valid Perfect Square: Given a positive integer num, write a function which returns True if num is a perfect square else False. Give me GoLang implementation for it.",
		"Reverse String: Write a function that reverses a string. The input string is given as an array of characters char[]. Give me GoLang implementation for it.",
		"Power of Three: Given an integer, write a function to determine if it is a power of three. Give me GoLang implementation for it.",
		"Number of 1 Bits: Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight). Give me GoLang implementation for it.",
		"Happy Number: Write an algorithm to determine if a number n is \"happy\". Give me GoLang implementation for it.",
		"Count Primes: Count the number of prime numbers less than a non-negative number, n. Give me GoLang implementation for it.",
		"Reverse Vowels of a String: Write a function that takes a string as input and reverse only the vowels of a string. Give me GoLang implementation for it.",
		"Implement Stack using Queues: Implement the following operations of a stack using queues. Give me GoLang implementation for it.",
		"Hamming Distance: The Hamming distance between two integers is the number of positions at which the corresponding bits are different. Give me GoLang implementation for it.",
		"Missing Number: Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array. Give me GoLang implementation for it.",
		"Valid Perfect Square: Given a positive integer num, write a function which returns True if num is a perfect square else False. Give me GoLang implementation for it.",
		"Fizz Buzz: Write a program that outputs the string representation of numbers from 1 to n. But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”. Give me GoLang implementation for it.",
		"Reverse Linked List: Reverse a singly linked list. Give me GoLang implementation for it.",
		"Move Zeroes: Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements. Give me GoLang implementation for it.",
		"Maximum Depth of Binary Tree: Given a binary tree, find its maximum depth. Give me GoLang implementation for it.",
		"Best Time to Buy and Sell Stock II: Say you have an array prices for which the ith element is the price of a given stock on day i. Give me GoLang implementation for it.",
		"Convert Sorted Array to Binary Search Tree: Given an array where elements are sorted in ascending order, convert it to a height balanced BST. Give me GoLang implementation for it.",
		"Reverse Bits: Reverse bits of a given 32 bits unsigned integer. Give me GoLang implementation for it.",
		"Single Number: Given a non-empty array of integers, every element appears twice except for one. Find that single one. Give me GoLang implementation for it.",
		"Maximum Subarray: Find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Give me GoLang implementation for it.",
		"Count and Say: The count-and-say sequence is the sequence of integers with the first five terms as following: 1, 11, 21, 1211, 111221, ... Give me GoLang implementation for it.",
		"Binary Tree Level Order Traversal: Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level). Give me GoLang implementation for it.",
		"Symmetric Tree: Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center). Give me GoLang implementation for it.",
		"Same Tree: Given two binary trees, write a function to check if they are the same or not. Give me GoLang implementation for it.",
		"Maximum Depth of N-ary Tree: Given a n-ary tree, find its maximum depth. Give me GoLang implementation for it.",
		"Minimum Depth of Binary Tree: Given a binary tree, find its minimum depth. Give me GoLang implementation for it.",
		"Valid Parentheses: Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. Give me GoLang implementation for it.",
		"Merge Two Sorted Lists: Merge two sorted linked lists and return it as a new sorted list. Give me GoLang implementation for it.",
		"Remove Duplicates from Sorted Array: Given a sorted array, remove the duplicates in-place such that each element appears only once and return the new length. Give me GoLang implementation for it.",
		"Remove Element: Given an array nums and a value val, remove all instances of that value in-place and return the new length. Give me GoLang implementation for it.",
		"Implement strStr(): Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack. Give me GoLang implementation for it.",
		"Search Insert Position: Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. Give me GoLang implementation for it.",
		"Count and Say: The count-and-say sequence is the sequence of integers with the first five terms as following: 1, 11, 21, 1211, 111221, ... Give me GoLang implementation for it.",
		"Maximum Subarray: Find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Give me GoLang implementation for it.",
		"Length of Last Word: Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word (last word means the last appearing word if we loop from left to right) in the string. Give me GoLang implementation for it.",
		"Plus One: Given a non-empty array of digits representing a non-negative integer, plus one to the integer. Give me GoLang implementation for it.",
		"Add Binary: Given two binary strings, return their sum (also a binary string). Give me GoLang implementation for it.",
		"Climbing Stairs: You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? Give me GoLang implementation for it.",
		"Sqrt(x): Compute and return the square root of x, where x is guaranteed to be a non-negative integer. Give me GoLang implementation for it.",
		"Merge Sorted Array: Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. Give me GoLang implementation for it.",
		"Valid Palindrome: Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. Give me GoLang implementation for it.",
		"Pascal's Triangle: Given a non-negative integer numRows, generate the first numRows of Pascal's triangle. Give me GoLang implementation for it.",
		"Best Time to Buy and Sell Stock: You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0. Give me GoLang implementation for it.",
		"Valid Anagram: Given two strings s and t , write a function to determine if t is an anagram of s. Give me GoLang implementation for it.",
		"Implement Queue using Stacks: Implement the following operations of a queue using stacks. Give me GoLang implementation for it.",
		"Intersection of Two Arrays II: Given two arrays, write a function to compute their intersection. Give me GoLang implementation for it.",
		"Fizz Buzz: Write a program that outputs the string representation of numbers from 1 to n. But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”. Give me GoLang implementation for it.",
		"Single Number: Given a non-empty array of integers, every element appears twice except for one. Find that single one. Give me GoLang implementation for it.",
		"Rotate Array: Given an array, rotate the array to the right by k steps, where k is non-negative. Give me GoLang implementation for it.",
		"Reverse Linked List: Reverse a singly linked list. Give me GoLang implementation for it.",
		"First Unique Character in a String: Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1. Give me GoLang implementation for it.",
		"Move Zeroes: Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements. Give me GoLang implementation for it.",
		"Majority Element: Given an array nums of size n, return the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times. Give me GoLang implementation for it.",
		"Excel Sheet Column Number: Given a column title as appear in an Excel sheet, return its corresponding column number. Give me GoLang implementation for it.",
		"Palindrome Linked List: Given a singly linked list, determine if it is a palindrome. Give me GoLang implementation for it.",
		"Intersection of Two Linked Lists: Write a program to find the node at which the intersection of two singly linked lists begins. Give me GoLang implementation for it.",
		"Two Sum II - Input array is sorted: Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number. Give me GoLang implementation for it.",
		"Valid Perfect Square: Given a positive integer num, write a function which returns True if num is a perfect square else False. Give me GoLang implementation for it.",
		"Reverse String: Write a function that reverses a string. The input string is given as an array of characters char[]. Give me GoLang implementation for it.",
		"Power of Three: Given an integer, write a function to determine if it is a power of three. Give me GoLang implementation for it.",
		"Number of 1 Bits: Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight). Give me GoLang implementation for it.",
		"Happy Number: Write an algorithm to determine if a number n is \"happy\". Give me GoLang implementation for it.",
		"Count Primes: Count the number of prime numbers less than a non-negative number, n. Give me GoLang implementation for it.",
		"Reverse Vowels of a String: Write a function that takes a string as input and reverse only the vowels of a string. Give me GoLang implementation for it.",
		"Best Time to Buy and Sell Stock III: You are given an array prices where prices[i] is the price of a given stock on the ith day. You may complete at most two transactions. Return the maximum profit you can achieve. Give me GoLang implementation for it.",
		"Valid Sudoku: Determine if a 9x9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules: Each row must contain the digits 1-9 without repetition. Each column must contain the digits 1-9 without repetition. Each of the 9 3x3 sub-boxes of the grid must contain the digits 1-9 without repetition. Give me GoLang implementation for it.",
		"Product of Array Except Self: Given an array nums of n integers where n > 1, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i]. Give me GoLang implementation for it.",
		"House Robber: You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and it will automatically contact the police if two adjacent houses were broken into on the same night. Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police. Give me GoLang implementation for it.",
		"Best Time to Buy and Sell Stock IV: Say you have an array for which the ith element is the price of a given stock on day i. Design an algorithm to find the maximum profit. You may complete at most k transactions. Note: You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again). Give me GoLang implementation for it.",
		"Counting Bits: Given a non negative integer number num. For every numbers i in the range 0 ≤ i ≤ num calculate the number of 1's in their binary representation and return them as an array. Give me GoLang implementation for it.",
		"Construct Binary Tree from Preorder and Inorder Traversal: Given preorder and inorder traversal of a tree, construct the binary tree. Give me GoLang implementation for it.",
		"Implement Trie (Prefix Tree): Implement a trie with insert, search, and startsWith methods. Give me GoLang implementation for it.",
		"Intersection of Two Arrays: Given two arrays, write a function to compute their intersection. Give me GoLang implementation for it.",
		"Valid Parentheses: Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. Give me GoLang implementation for it.",
		"Merge Two Sorted Lists: Merge two sorted linked lists and return it as a new sorted list. Give me GoLang implementation for it.",
		"Remove Duplicates from Sorted Array: Given a sorted array, remove the duplicates in-place such that each element appears only once and return the new length. Give me GoLang implementation for it.",
		"Remove Element: Given an array nums and a value val, remove all instances of that value in-place and return the new length. Give me GoLang implementation for it.",
		"Implement strStr(): Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack. Give me GoLang implementation for it.",
		"Search Insert Position: Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. Give me GoLang implementation for it.",
		"Count and Say: The count-and-say sequence is the sequence of integers with the first five terms as following: 1, 11, 21, 1211, 111221, ... Give me GoLang implementation for it.",
		"Maximum Subarray: Find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Give me GoLang implementation for it.",
		"Length of Last Word: Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word (last word means the last appearing word if we loop from left to right) in the string. Give me GoLang implementation for it.",
		"Plus One: Given a non-empty array of digits representing a non-negative integer, plus one to the integer. Give me GoLang implementation for it.",
		"Add Binary: Given two binary strings, return their sum (also a binary string). Give me GoLang implementation for it.",
		"Climbing Stairs: You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? Give me GoLang implementation for it.",
		"Sqrt(x): Compute and return the square root of x, where x is guaranteed to be a non-negative integer. Give me GoLang implementation for it.",
		"Merge Sorted Array: Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. Give me GoLang implementation for it.",
		"Valid Palindrome: Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. Give me GoLang implementation for it.",
		"Pascal's Triangle: Given a non-negative integer numRows, generate the first numRows of Pascal's triangle. Give me GoLang implementation for it.",
		"Best Time to Buy and Sell Stock: You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0. Give me GoLang implementation for it.",
		"Valid Anagram: Given two strings s and t , write a function to determine if t is an anagram of s. Give me GoLang implementation for it.",
		"Implement Queue using Stacks: Implement the following operations of a queue using stacks. Give me GoLang implementation for it.",
		"Intersection of Two Arrays II: Given two arrays, write a function to compute their intersection. Give me GoLang implementation for it.",
		"Fizz Buzz: Write a program that outputs the string representation of numbers from 1 to n. But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”. Give me GoLang implementation for it.",
		"Single Number: Given a non-empty array of integers, every element appears twice except for one. Find that single one. Give me GoLang implementation for it.",
		"Rotate Array: Given an array, rotate the array to the right by k steps, where k is non-negative. Give me GoLang implementation for it.",
		"Reverse Linked List: Reverse a singly linked list. Give me GoLang implementation for it.",
		"First Unique Character in a String: Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1. Give me GoLang implementation for it.",
		"Move Zeroes: Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements. Give me GoLang implementation for it.",
		"Majority Element: Given an array nums of size n, return the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times. Give me GoLang implementation for it.",
		"Excel Sheet Column Number: Given a column title as appear in an Excel sheet, return its corresponding column number. Give me GoLang implementation for it.",
		"Palindrome Linked List: Given a singly linked list, determine if it is a palindrome. Give me GoLang implementation for it.",
		"Intersection of Two Linked Lists: Write a program to find the node at which the intersection of two singly linked lists begins. Give me GoLang implementation for it.",
		"Two Sum II - Input array is sorted: Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number. Give me GoLang implementation for it.",
		"Valid Perfect Square: Given a positive integer num, write a function which returns True if num is a perfect square else False. Give me GoLang implementation for it.",
		"Reverse String: Write a function that reverses a string. The input string is given as an array of characters char[]. Give me GoLang implementation for it.",
		"Power of Three: Given an integer, write a function to determine if it is a power of three. Give me GoLang implementation for it.",
		"Number of 1 Bits: Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight). Give me GoLang implementation for it.",
		"Happy Number: Write an algorithm to determine if a number n is \"happy\". Give me GoLang implementation for it.",
		"Count Primes: Count the number of prime numbers less than a non-negative number, n. Give me GoLang implementation for it.",
		"Reverse Vowels of a String: Write a function that takes a string as input and reverse only the vowels of a string. Give me GoLang implementation for it.",
		"Power of Two: Given an integer, write a function to determine if it is a power of two. Give me GoLang implementation for it.",
		"Minimum Depth of Binary Tree: Given a binary tree, find its minimum depth. Give me GoLang implementation for it.",
		"Valid Parentheses: Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. Give me GoLang implementation for it.",
		"Merge Two Sorted Lists: Merge two sorted linked lists and return it as a new sorted list. Give me GoLang implementation for it.",
		"Remove Duplicates from Sorted Array: Given a sorted array, remove the duplicates in-place such that each element appears only once and return the new length. Give me GoLang implementation for it.",
		"Remove Element: Given an array nums and a value val, remove all instances of that value in-place and return the new length. Give me GoLang implementation for it.",
		"Implement strStr(): Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack. Give me GoLang implementation for it.",
		"Search Insert Position: Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. Give me GoLang implementation for it.",
		"Count and Say: The count-and-say sequence is the sequence of integers with the first five terms as following: 1, 11, 21, 1211, 111221, ... Give me GoLang implementation for it.",
		"Maximum Subarray: Find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Give me GoLang implementation for it.",
		"Length of Last Word: Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word (last word means the last appearing word if we loop from left to right) in the string. Give me GoLang implementation for it.",
		"Plus One: Given a non-empty array of digits representing a non-negative integer, plus one to the integer. Give me GoLang implementation for it.",
		"Add Binary: Given two binary strings, return their sum (also a binary string). Give me GoLang implementation for it.",
		"Climbing Stairs: You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? Give me GoLang implementation for it.",
		"Sqrt(x): Compute and return the square root of x, where x is guaranteed to be a non-negative integer. Give me GoLang implementation for it.",
		"Merge Sorted Array: Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. Give me GoLang implementation for it.",
		"Valid Palindrome: Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. Give me GoLang implementation for it.",
		"Pascal's Triangle: Given a non-negative integer numRows, generate the first numRows of Pascal's triangle. Give me GoLang implementation for it.",
		"Best Time to Buy and Sell Stock: You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0. Give me GoLang implementation for it.",
		"Valid Anagram: Given two strings s and t , write a function to determine if t is an anagram of s. Give me GoLang implementation for it.",
		"Implement Queue using Stacks: Implement the following operations of a queue using stacks. Give me GoLang implementation for it.",
		"Intersection of Two Arrays II: Given two arrays, write a function to compute their intersection. Give me GoLang implementation for it.",
		"Fizz Buzz: Write a program that outputs the string representation of numbers from 1 to n. But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”. Give me GoLang implementation for it.",
		"Single Number: Given a non-empty array of integers, every element appears twice except for one. Find that single one. Give me GoLang implementation for it.",
		"Rotate Array: Given an array, rotate the array to the right by k steps, where k is non-negative. Give me GoLang implementation for it.",
		"Reverse Linked List: Reverse a singly linked list. Give me GoLang implementation for it.",
		"First Unique Character in a String: Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1. Give me GoLang implementation for it.",
		"Move Zeroes: Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements. Give me GoLang implementation for it.",
		"Majority Element: Given an array nums of size n, return the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times. Give me GoLang implementation for it.",
		"Excel Sheet Column Number: Given a column title as appear in an Excel sheet, return its corresponding column number. Give me GoLang implementation for it.",
		"Palindrome Linked List: Given a singly linked list, determine if it is a palindrome. Give me GoLang implementation for it.",
		"Intersection of Two Linked Lists: Write a program to find the node at which the intersection of two singly linked lists begins. Give me GoLang implementation for it.",
		"Two Sum II - Input array is sorted: Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number. Give me GoLang implementation for it.",
		"Valid Perfect Square: Given a positive integer num, write a function which returns True if num is a perfect square else False. Give me GoLang implementation for it.",
		"Reverse String: Write a function that reverses a string. The input string is given as an array of characters char[]. Give me GoLang implementation for it.",
		"Power of Three: Given an integer, write a function to determine if it is a power of three. Give me GoLang implementation for it.",
		"Number of 1 Bits: Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight). Give me GoLang implementation for it.",
		"Happy Number: Write an algorithm to determine if a number n is \"happy\". Give me GoLang implementation for it.",
		"Count Primes: Count the number of prime numbers less than a non-negative number, n. Give me GoLang implementation for it.",
		"Reverse Vowels of a String: Write a function that takes a string as input and reverse only the vowels of a string. Give me GoLang implementation for it.",
		"Power of Two: Given an integer, write a function to determine if it is a power of two. Give me GoLang implementation for it.",
		"Minimum Depth of Binary Tree: Given a binary tree, find its minimum depth. Give me GoLang implementation for it.",
		"Valid Parentheses: Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. Give me GoLang implementation for it.",
		"Merge Two Sorted Lists: Merge two sorted linked lists and return it as a new sorted list. Give me GoLang implementation for it.",
		"Remove Duplicates from Sorted Array: Given a sorted array, remove the duplicates in-place such that each element appears only once and return the new length. Give me GoLang implementation for it.",
		"Remove Element: Given an array nums and a value val, remove all instances of that value in-place and return the new length. Give me GoLang implementation for it.",
		"Implement strStr(): Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack. Give me GoLang implementation for it.",
		"Search Insert Position: Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. Give me GoLang implementation for it.",
		"Count and Say: The count-and-say sequence is the sequence of integers with the first five terms as following: 1, 11, 21, 1211, 111221, ... Give me GoLang implementation for it.",
		"Maximum Subarray: Find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Give me GoLang implementation for it.",
		"Length of Last Word: Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word (last word means the last appearing word if we loop from left to right) in the string. Give me GoLang implementation for it.",
		"Plus One: Given a non-empty array of digits representing a non-negative integer, plus one to the integer. Give me GoLang implementation for it.",
		"Add Binary: Given two binary strings, return their sum (also a binary string). Give me GoLang implementation for it.",
		"Climbing Stairs: You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? Give me GoLang implementation for it.",
		"Sqrt(x): Compute and return the square root of x, where x is guaranteed to be a non-negative integer. Give me GoLang implementation for it.",
		"Merge Sorted Array: Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. Give me GoLang implementation for it.",
		"Valid Palindrome: Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. Give me GoLang implementation for it.",
		"Pascal's Triangle: Given a non-negative integer numRows, generate the first numRows of Pascal's triangle. Give me GoLang implementation for it.",
		"Best Time to Buy and Sell Stock: You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0. Give me GoLang implementation for it.",
		"Valid Anagram: Given two strings s and t , write a function to determine if t is an anagram of s. Give me GoLang implementation for it.",
		"Implement Queue using Stacks: Implement the following operations of a queue using stacks. Give me GoLang implementation for it.",
		"Intersection of Two Arrays II: Given two arrays, write a function to compute their intersection. Give me GoLang implementation for it.",
		"Fizz Buzz: Write a program that outputs the string representation of numbers from 1 to n. But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”. Give me GoLang implementation for it.",
		"Single Number: Given a non-empty array of integers, every element appears twice except for one. Find that single one. Give me GoLang implementation for it.",
		"Rotate Array: Given an array, rotate the array to the right by k steps, where k is non-negative. Give me GoLang implementation for it.",
		"Reverse Linked List: Reverse a singly linked list. Give me GoLang implementation for it.",
		"First Unique Character in a String: Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1. Give me GoLang implementation for it.",
		"Move Zeroes: Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements. Give me GoLang implementation for it.",
		"Majority Element: Given an array nums of size n, return the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times. Give me GoLang implementation for it.",
		"Excel Sheet Column Number: Given a column title as appear in an Excel sheet, return its corresponding column number. Give me GoLang implementation for it.",
		"Palindrome Linked List: Given a singly linked list, determine if it is a palindrome. Give me GoLang implementation for it.",
		"Intersection of Two Linked Lists: Write a program to find the node at which the intersection of two singly linked lists begins. Give me GoLang implementation for it.",
		"Two Sum II - Input array is sorted: Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number. Give me GoLang implementation for it.",
		"Valid Perfect Square: Given a positive integer num, write a function which returns True if num is a perfect square else False. Give me GoLang implementation for it.",
		"Reverse String: Write a function that reverses a string. The input string is given as an array of characters char[]. Give me GoLang implementation for it.",
		"Power of Three: Given an integer, write a function to determine if it is a power of three. Give me GoLang implementation for it.",
		"Number of 1 Bits: Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight). Give me GoLang implementation for it.",
		"Happy Number: Write an algorithm to determine if a number n is \"happy\". Give me GoLang implementation for it.",
		"Count Primes: Count the number of prime numbers less than a non-negative number, n. Give me GoLang implementation for it.",
		"Reverse Vowels of a String: Write a function that takes a string as input and reverse only the vowels of a string. Give me GoLang implementation for it.",
		"Power of Two: Given an integer, write a function to determine if it is a power of two. Give me GoLang implementation for it.",
		"Minimum Depth of Binary Tree: Given a binary tree, find its minimum depth. Give me GoLang implementation for it.",
		"Valid Parentheses: Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. Give me GoLang implementation for it.",
		"Merge Two Sorted Lists: Merge two sorted linked lists and return it as a new sorted list. Give me GoLang implementation for it.",
		"Remove Duplicates from Sorted Array: Given a sorted array, remove the duplicates in-place such that each element appears only once and return the new length. Give me GoLang implementation for it.",
		"Remove Element: Given an array nums and a value val, remove all instances of that value in-place and return the new length. Give me GoLang implementation for it.",
		"Implement strStr(): Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack. Give me GoLang implementation for it.",
		"Search Insert Position: Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. Give me GoLang implementation for it.",
		"Count and Say: The count-and-say sequence is the sequence of integers with the first five terms as following: 1, 11, 21, 1211, 111221, ... Give me GoLang implementation for it.",
		"Maximum Subarray: Find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Give me GoLang implementation for it.",
		"Length of Last Word: Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word (last word means the last appearing word if we loop from left to right) in the string. Give me GoLang implementation for it.",
		"Plus One: Given a non-empty array of digits representing a non-negative integer, plus one to the integer. Give me GoLang implementation for it.",
		"Add Binary: Given two binary strings, return their sum (also a binary string). Give me GoLang implementation for it.",
		"Valid Mountain Array: Given an array of integers, determine if it is a valid mountain array. An array is valid if it: Has exactly one peak. Strictly increasing on the left of the peak. Strictly decreasing on the right of the peak. Give me GoLang implementation for it.",
		"Intersection of Two Arrays: Given two arrays, write a function to compute their intersection. Give me GoLang implementation for it.",
		"Valid Parentheses: Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. Give me GoLang implementation for it.",
		"Merge Two Sorted Lists: Merge two sorted linked lists and return it as a new sorted list. Give me GoLang implementation for it.",
		"Remove Duplicates from Sorted Array: Given a sorted array, remove the duplicates in-place such that each element appears only once and return the new length. Give me GoLang implementation for it.",
		"Remove Element: Given an array nums and a value val, remove all instances of that value in-place and return the new length. Give me GoLang implementation for it.",
		"Implement strStr(): Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack. Give me GoLang implementation for it.",
		"Search Insert Position: Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. Give me GoLang implementation for it.",
		"Count and Say: The count-and-say sequence is the sequence of integers with the first five terms as following: 1, 11, 21, 1211, 111221, ... Give me GoLang implementation for it.",
		"Maximum Subarray: Find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Give me GoLang implementation for it.",
		"Length of Last Word: Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word (last word means the last appearing word if we loop from left to right) in the string. Give me GoLang implementation for it.",
		"Plus One: Given a non-empty array of digits representing a non-negative integer, plus one to the integer. Give me GoLang implementation for it.",
		"Add Binary: Given two binary strings, return their sum (also a binary string). Give me GoLang implementation for it.",
		"Climbing Stairs: You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? Give me GoLang implementation for it.",
		"Sqrt(x): Compute and return the square root of x, where x is guaranteed to be a non-negative integer. Give me GoLang implementation for it.",
		"Merge Sorted Array: Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. Give me GoLang implementation for it.",
		"Valid Palindrome: Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. Give me GoLang implementation for it.",
		"Pascal's Triangle: Given a non-negative integer numRows, generate the first numRows of Pascal's triangle. Give me GoLang implementation for it.",
		"Best Time to Buy and Sell Stock: You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0. Give me GoLang implementation for it.",
		"Valid Anagram: Given two strings s and t , write a function to determine if t is an anagram of s. Give me GoLang implementation for it.",
		"Implement Queue using Stacks: Implement the following operations of a queue using stacks. Give me GoLang implementation for it.",
		"Intersection of Two Arrays II: Given two arrays, write a function to compute their intersection. Give me GoLang implementation for it.",
		"Fizz Buzz: Write a program that outputs the string representation of numbers from 1 to n. But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”. Give me GoLang implementation for it.",
		"Single Number: Given a non-empty array of integers, every element appears twice except for one. Find that single one. Give me GoLang implementation for it.",
		"Rotate Array: Given an array, rotate the array to the right by k steps, where k is non-negative. Give me GoLang implementation for it.",
		"Reverse Linked List: Reverse a singly linked list. Give me GoLang implementation for it.",
		"First Unique Character in a String: Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1. Give me GoLang implementation for it.",
		"Move Zeroes: Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements. Give me GoLang implementation for it.",
		"Majority Element: Given an array nums of size n, return the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times. Give me GoLang implementation for it.",
		"Excel Sheet Column Number: Given a column title as appear in an Excel sheet, return its corresponding column number. Give me GoLang implementation for it.",
		"Palindrome Linked List: Given a singly linked list, determine if it is a palindrome. Give me GoLang implementation for it.",
		"Intersection of Two Linked Lists: Write a program to find the node at which the intersection of two singly linked lists begins. Give me GoLang implementation for it.",
		"Two Sum II - Input array is sorted: Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number. Give me GoLang implementation for it.",
		"Valid Perfect Square: Given a positive integer num, write a function which returns True if num is a perfect square else False. Give me GoLang implementation for it.",
		"Reverse String: Write a function that reverses a string. The input string is given as an array of characters char[]. Give me GoLang implementation for it.",
		"Power of Three: Given an integer, write a function to determine if it is a power of three. Give me GoLang implementation for it.",
		"Number of 1 Bits: Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight). Give me GoLang implementation for it.",
		"Happy Number: Write an algorithm to determine if a number n is \"happy\". Give me GoLang implementation for it.",
		"Count Primes: Count the number of prime numbers less than a non-negative number, n. Give me GoLang implementation for it.",
		"Reverse Vowels of a String: Write a function that takes a string as input and reverse only the vowels of a string. Give me GoLang implementation for it.",
		"Power of Two: Given an integer, write a function to determine if it is a power of two. Give me GoLang implementation for it.",
		"Minimum Depth of Binary Tree: Given a binary tree, find its minimum depth. Give me GoLang implementation for it.",
		"Valid Parentheses: Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. Give me GoLang implementation for it.",
		"Merge Two Sorted Lists: Merge two sorted linked lists and return it as a new sorted list. Give me GoLang implementation for it.",
		"Remove Duplicates from Sorted Array: Given a sorted array, remove the duplicates in-place such that each element appears only once and return the new length. Give me GoLang implementation for it.",
		"Remove Element: Given an array nums and a value val, remove all instances of that value in-place and return the new length. Give me GoLang implementation for it.",
		"Implement strStr(): Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack. Give me GoLang implementation for it.",
		"Search Insert Position: Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. Give me GoLang implementation for it.",
		"Count and Say: The count-and-say sequence is the sequence of integers with the first five terms as following: 1, 11, 21, 1211, 111221, ... Give me GoLang implementation for it.",
		"Maximum Subarray: Find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Give me GoLang implementation for it.",
		"Length of Last Word: Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word (last word means the last appearing word if we loop from left to right) in the string. Give me GoLang implementation for it.",
		"Plus One: Given a non-empty array of digits representing a non-negative integer, plus one to the integer. Give me GoLang implementation for it.",
		"Add Binary: Given two binary strings, return their sum (also a binary string). Give me GoLang implementation for it.",
		"Climbing Stairs: You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? Give me GoLang implementation for it.",
		"Sqrt(x): Compute and return the square root of x, where x is guaranteed to be a non-negative integer. Give me GoLang implementation for it.",
		"Merge Sorted Array: Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. Give me GoLang implementation for it.",
		"Valid Palindrome: Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. Give me GoLang implementation for it.",
		"Pascal's Triangle: Given a non-negative integer numRows, generate the first numRows of Pascal's triangle. Give me GoLang implementation for it.",
		"Best Time to Buy and Sell Stock: You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0. Give me GoLang implementation for it.",
		"Valid Anagram: Given two strings s and t , write a function to determine if t is an anagram of s. Give me GoLang implementation for it.",
		"Implement Queue using Stacks: Implement the following operations of a queue using stacks. Give me GoLang implementation for it.",
		"Intersection of Two Arrays II: Given two arrays, write a function to compute their intersection. Give me GoLang implementation for it.",
		"Fizz Buzz: Write a program that outputs the string representation of numbers from 1 to n. But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”. Give me GoLang implementation for it.",
		"Single Number: Given a non-empty array of integers, every element appears twice except for one. Find that single one. Give me GoLang implementation for it.",
		"Rotate Array: Given an array, rotate the array to the right by k steps, where k is non-negative. Give me GoLang implementation for it.",
		"Reverse Linked List: Reverse a singly linked list. Give me GoLang implementation for it.",
		"First Unique Character in a String: Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1. Give me GoLang implementation for it.",
		"Move Zeroes: Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements. Give me GoLang implementation for it.",
		"Majority Element: Given an array nums of size n, return the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times. Give me GoLang implementation for it.",
		"Excel Sheet Column Number: Given a column title as appear in an Excel sheet, return its corresponding column number. Give me GoLang implementation for it.",
		"Count and Say: The count-and-say sequence is the sequence of integers with the first five terms as following: 1, 11, 21, 1211, 111221, ... Give me GoLang implementation for it.",
		"Maximum Subarray: Find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Give me GoLang implementation for it.",
		"Length of Last Word: Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word (last word means the last appearing word if we loop from left to right) in the string. Give me GoLang implementation for it.",
		"Plus One: Given a non-empty array of digits representing a non-negative integer, plus one to the integer. Give me GoLang implementation for it.",
		"Add Binary: Given two binary strings, return their sum (also a binary string). Give me GoLang implementation for it.",
		"Climbing Stairs: You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? Give me GoLang implementation for it.",
		"Sqrt(x): Compute and return the square root of x, where x is guaranteed to be a non-negative integer. Give me GoLang implementation for it.",
		"Merge Sorted Array: Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. Give me GoLang implementation for it.",
		"Valid Palindrome: Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. Give me GoLang implementation for it.",
		"Pascal's Triangle: Given a non-negative integer numRows, generate the first numRows of Pascal's triangle. Give me GoLang implementation for it.",
		"Best Time to Buy and Sell Stock: You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0. Give me GoLang implementation for it.",
		"Valid Anagram: Given two strings s and t , write a function to determine if t is an anagram of s. Give me GoLang implementation for it.",
		"Implement Queue using Stacks: Implement the following operations of a queue using stacks. Give me GoLang implementation for it.",
		"Intersection of Two Arrays II: Given two arrays, write a function to compute their intersection. Give me GoLang implementation for it.",
		"Fizz Buzz: Write a program that outputs the string representation of numbers from 1 to n. But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”. Give me GoLang implementation for it.",
		"Single Number: Given a non-empty array of integers, every element appears twice except for one. Find that single one. Give me GoLang implementation for it.",
		"Rotate Array: Given an array, rotate the array to the right by k steps, where k is non-negative. Give me GoLang implementation for it.",
		"Reverse Linked List: Reverse a singly linked list. Give me GoLang implementation for it.",
		"First Unique Character in a String: Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1. Give me GoLang implementation for it.",
		"Move Zeroes: Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements. Give me GoLang implementation for it.",
		"Majority Element: Given an array nums of size n, return the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times. Give me GoLang implementation for it.",
		"Excel Sheet Column Number: Given a column title as appear in an Excel sheet, return its corresponding column number. Give me GoLang implementation for it.",
		"Palindrome Linked List: Given a singly linked list, determine if it is a palindrome. Give me GoLang implementation for it.",
		"Intersection of Two Linked Lists: Write a program to find the node at which the intersection of two singly linked lists begins. Give me GoLang implementation for it.",
		"Two Sum II - Input array is sorted: Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number. Give me GoLang implementation for it.",
		"Valid Perfect Square: Given a positive integer num, write a function which returns True if num is a perfect square else False. Give me GoLang implementation for it.",
		"Reverse String: Write a function that reverses a string. The input string is given as an array of characters char[]. Give me GoLang implementation for it.",
		"Power of Three: Given an integer, write a function to determine if it is a power of three. Give me GoLang implementation for it.",
		"Number of 1 Bits: Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight). Give me GoLang implementation for it.",
		"Happy Number: Write an algorithm to determine if a number n is \"happy\". Give me GoLang implementation for it.",
		"Count Primes: Count the number of prime numbers less than a non-negative number, n. Give me GoLang implementation for it.",
		"Reverse Vowels of a String: Write a function that takes a string as input and reverse only the vowels of a string. Give me GoLang implementation for it.",
		"Power of Two: Given an integer, write a function to determine if it is a power of two. Give me GoLang implementation for it.",
		"Minimum Depth of Binary Tree: Given a binary tree, find its minimum depth. Give me GoLang implementation for it.",
		"Valid Parentheses: Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. Give me GoLang implementation for it.",
		"Merge Two Sorted Lists: Merge two sorted linked lists and return it as a new sorted list. Give me GoLang implementation for it.",
		"Remove Duplicates from Sorted Array: Given a sorted array, remove the duplicates in-place such that each element appears only once and return the new length. Give me GoLang implementation for it.",
		"Remove Element: Given an array nums and a value val, remove all instances of that value in-place and return the new length. Give me GoLang implementation for it.",
		"Implement strStr(): Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack. Give me GoLang implementation for it.",
		"Search Insert Position: Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. Give me GoLang implementation for it.",
		"Count and Say: The count-and-say sequence is the sequence of integers with the first five terms as following: 1, 11, 21, 1211, 111221, ... Give me GoLang implementation for it.",
		"Maximum Subarray: Find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Give me GoLang implementation for it.",
		"Length of Last Word: Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word (last word means the last appearing word if we loop from left to right) in the string. Give me GoLang implementation for it.",
		"Plus One: Given a non-empty array of digits representing a non-negative integer, plus one to the integer. Give me GoLang implementation for it.",
		"Add Binary: Given two binary strings, return their sum (also a binary string). Give me GoLang implementation for it.",
		"Climbing Stairs: You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? Give me GoLang implementation for it.",
		"Sqrt(x): Compute and return the square root of x, where x is guaranteed to be a non-negative integer. Give me GoLang implementation for it.",
		"Merge Sorted Array: Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. Give me GoLang implementation for it.",
		"Valid Palindrome: Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. Give me GoLang implementation for it.",
		"Pascal's Triangle: Given a non-negative integer numRows, generate the first numRows of Pascal's triangle. Give me GoLang implementation for it.",
		"Best Time to Buy and Sell Stock: You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0. Give me GoLang implementation for it.",
		"Valid Anagram: Given two strings s and t , write a function to determine if t is an anagram of s. Give me GoLang implementation for it.",
		"Implement Queue using Stacks: Implement the following operations of a queue using stacks. Give me GoLang implementation for it.",
		"Intersection of Two Arrays II: Given two arrays, write a function to compute their intersection. Give me GoLang implementation for it.",
		"Fizz Buzz: Write a program that outputs the string representation of numbers from 1 to n. But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”. Give me GoLang implementation for it.",
		"Single Number: Given a non-empty array of integers, every element appears twice except for one. Find that single one. Give me GoLang implementation for it.",
		"Rotate Array: Given an array, rotate the array to the right by k steps, where k is non-negative. Give me GoLang implementation for it.",
		"Reverse Linked List: Reverse a singly linked list. Give me GoLang implementation for it.",
		"First Unique Character in a String: Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1. Give me GoLang implementation for it.",
		"Move Zeroes: Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements. Give me GoLang implementation for it.",
		"Majority Element: Given an array nums of size n, return the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times. Give me GoLang implementation for it.",
		"Excel Sheet Column Number: Given a column title as appear in an Excel sheet, return its corresponding column number. Give me GoLang implementation for it.",
		"Palindrome Linked List: Given a singly linked list, determine if it is a palindrome. Give me GoLang implementation for it.",
		"Intersection of Two Linked Lists: Write a program to find the node at which the intersection of two singly linked lists begins. Give me GoLang implementation for it.",
		"Two Sum II - Input array is sorted: Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number. Give me GoLang implementation for it.",
		"Valid Perfect Square: Given a positive integer num, write a function which returns True if num is a perfect square else False. Give me GoLang implementation for it.",
		"Reverse String: Write a function that reverses a string. The input string is given as an array of characters char[]. Give me GoLang implementation for it.",
		"Power of Three: Given an integer, write a function to determine if it is a power of three. Give me GoLang implementation for it.",
		"Number of 1 Bits: Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight). Give me GoLang implementation for it.",
		"Happy Number: Write an algorithm to determine if a number n is \"happy\". Give me GoLang implementation for it.",
		"Count Primes: Count the number of prime numbers less than a non-negative number, n. Give me GoLang implementation for it.",
		"Reverse Vowels of a String: Write a function that takes a string as input and reverse only the vowels of a string. Give me GoLang implementation for it.",
		"Power of Two: Given an integer, write a function to determine if it is a power of two. Give me GoLang implementation for it.",
		"Minimum Depth of Binary Tree: Given a binary tree, find its minimum depth. Give me GoLang implementation for it.",
		"Valid Parentheses: Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. Give me GoLang implementation for it.",
		"Merge Two Sorted Lists: Merge two sorted linked lists and return it as a new sorted list. Give me GoLang implementation for it.",
		"Remove Duplicates from Sorted Array: Given a sorted array, remove the duplicates in-place such that each element appears only once and return the new length. Give me GoLang implementation for it.",
		"Remove Element: Given an array nums and a value val, remove all instances of that value in-place and return the new length. Give me GoLang implementation for it.",
		"Implement strStr(): Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack. Give me GoLang implementation for it.",
		"Search Insert Position: Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. Give me GoLang implementation for it.",
		"Count and Say: The count-and-say sequence is the sequence of integers with the first five terms as following: 1, 11, 21, 1211, 111221, ... Give me GoLang implementation for it.",
		"Maximum Subarray: Find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Give me GoLang implementation for it.",
		"Length of Last Word: Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word (last word means the last appearing word if we loop from left to right) in the string. Give me GoLang implementation for it.",
		"Plus One: Given a non-empty array of digits representing a non-negative integer, plus one to the integer. Give me GoLang implementation for it.",
		"Add Binary: Given two binary strings, return their sum (also a binary string). Give me GoLang implementation for it.",
		"Climbing Stairs: You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? Give me GoLang implementation for it.",
		"Sqrt(x): Compute and return the square root of x, where x is guaranteed to be a non-negative integer. Give me GoLang implementation for it.",
		"Merge Sorted Array: Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. Give me GoLang implementation for it.",
		"Valid Palindrome: Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. Give me GoLang implementation for it.",
		"Pascal's Triangle: Given a non-negative integer numRows, generate the first numRows of Pascal's triangle. Give me GoLang implementation for it.",
		"Best Time to Buy and Sell Stock: You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0. Give me GoLang implementation for it.",
		"Valid Anagram: Given two strings s and t , write a function to determine if t is an anagram of s. Give me GoLang implementation for it.",
		"Implement Queue using Stacks: Implement the following operations of a queue using stacks. Give me GoLang implementation for it.",
		"Intersection of Two Arrays II: Given two arrays, write a function to compute their intersection. Give me GoLang implementation for it.",
		"Fizz Buzz: Write a program that outputs the string representation of numbers from 1 to n. But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”. Give me GoLang implementation for it.",
		"Single Number: Given a non-empty array of integers, every element appears twice except for one. Find that single one. Give me GoLang implementation for it.",
		"Rotate Array: Given an array, rotate the array to the right by k steps, where k is non-negative. Give me GoLang implementation for it.",
		"Reverse Linked List: Reverse a singly linked list. Give me GoLang implementation for it.",
		"First Unique Character in a String: Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1. Give me GoLang implementation for it.",
		"Move Zeroes: Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements. Give me GoLang implementation for it.",
		"Majority Element: Given an array nums of size n, return the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times. Give me GoLang implementation for it.",
		"Excel Sheet Column Number: Given a column title as appear in an Excel sheet, return its corresponding column number. Give me GoLang implementation for it.",
		"Palindrome Linked List: Given a singly linked list, determine if it is a palindrome. Give me GoLang implementation for it.",
		"Intersection of Two Linked Lists: Write a program to find the node at which the intersection of two singly linked lists begins. Give me GoLang implementation for it.",
		"Two Sum II - Input array is sorted: Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number. Give me GoLang implementation for it.",
		"Valid Perfect Square: Given a positive integer num, write a function which returns True if num is a perfect square else False. Give me GoLang implementation for it.",
		"Reverse String: Write a function that reverses a string. The input string is given as an array of characters char[]. Give me GoLang implementation for it.",
		"Power of Three: Given an integer, write a function to determine if it is a power of three. Give me GoLang implementation for it.",
		"Number of 1 Bits: Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight). Give me GoLang implementation for it.",
		"Happy Number: Write an algorithm to determine if a number n is \"happy\". Give me GoLang implementation for it.",
		"Count Primes: Count the number of prime numbers less than a non-negative number, n. Give me GoLang implementation for it.",
		"Reverse Vowels of a String: Write a function that takes a string as input and reverse only the vowels of a string. Give me GoLang implementation for it.",
		"Power of Two: Given an integer, write a function to determine if it is a power of two. Give me GoLang implementation for it.",
		"Minimum Depth of Binary Tree: Given a binary tree, find its minimum depth. Give me GoLang implementation for it.",
		"Valid Parentheses: Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. Give me GoLang implementation for it.",
		"Merge Two Sorted Lists: Merge two sorted linked lists and return it as a new sorted list. Give me GoLang implementation for it.",
		"Remove Duplicates from Sorted Array: Given a sorted array, remove the duplicates in-place such that each element appears only once and return the new length. Give me GoLang implementation for it.",
		"Remove Element: Given an array nums and a value val, remove all instances of that value in-place and return the new length. Give me GoLang implementation for it.",
		"Implement strStr(): Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack. Give me GoLang implementation for it.",
		"Search Insert Position: Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. Give me GoLang implementation for it.",
		"Count and Say: The count-and-say sequence is the sequence of integers with the first five terms as following: 1, 11, 21, 1211, 111221, ... Give me GoLang implementation for it.",
		"Maximum Subarray: Find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Give me GoLang implementation for it.",
		"Length of Last Word: Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word (last word means the last appearing word if we loop from left to right) in the string. Give me GoLang implementation for it.",
		"Plus One: Given a non-empty array of digits representing a non-negative integer, plus one to the integer. Give me GoLang implementation for it.",
		"Add Binary: Given two binary strings, return their sum (also a binary string). Give me GoLang implementation for it.",
		"Climbing Stairs: You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? Give me GoLang implementation for it.",
		"Sqrt(x): Compute and return the square root of x, where x is guaranteed to be a non-negative integer. Give me GoLang implementation for it.",
		"Merge Sorted Array: Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. Give me GoLang implementation for it.",
		"Valid Palindrome: Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. Give me GoLang implementation for it.",
		"Pascal's Triangle: Given a non-negative integer numRows, generate the first numRows of Pascal's triangle. Give me GoLang implementation for it.",
		"Best Time to Buy and Sell Stock: You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0. Give me GoLang implementation for it.",
		"Valid Anagram: Given two strings s and t , write a function to determine if t is an anagram of s. Give me GoLang implementation for it.",
		"Count Negative Numbers in a Sorted Matrix: Given a m * n matrix grid which is sorted in non-increasing order both row-wise and column-wise, return the number of negative numbers in grid. Give me GoLang implementation for it.",
		"Minimum Time Visiting All Points: On a plane, there are n points with integer coordinates points[i] = [xi, yi]. Return the minimum time in seconds to visit all the points in the order given by points. Give me GoLang implementation for it.",
		"Number of Students Doing Homework at a Given Time: Given two integer arrays startTime and endTime and an integer queryTime. The ith student started doing their homework at the time startTime[i] and finished it at time endTime[i]. Return the number of students doing their homework at time queryTime. More formally, return the number of students where queryTime lays in the interval [startTime[i], endTime[i]] inclusive. Give me GoLang implementation for it.",
		"Smaller Numbers Than Current: Given the array nums, for each nums[i] find out how many numbers in the array are smaller than it. That is, for each nums[i] you have to count the number of valid j's such that j != i and nums[j] < nums[i]. Give me GoLang implementation for it.",
		"How Many Numbers Are Smaller Than the Current Number: Given the array nums, for each nums[i] find out how many numbers in the array are smaller than it. That is, for each nums[i] you have to count the number of valid j's such that j != i and nums[j] < nums[i]. Give me GoLang implementation for it.",
		"Create Target Array in the Given Order: Given two arrays of integers nums and index. Your task is to create target array under the following rules: Initially target array is empty. From left to right read nums[i] and index[i], insert at index index[i] the value nums[i] in target array. Repeat the previous step until there are no elements to read in nums and index. Return the target array. Give me GoLang implementation for it.",
		"Find N Unique Integers Sum up to Zero: Given an integer n, return any array containing n unique integers such that they add up to 0. Give me GoLang implementation for it.",
		"Matrix Diagonal Sum: Given a square matrix mat, return the sum of the matrix diagonals. Only include the sum of all the elements on the primary diagonal and all the elements on the secondary diagonal that are not part of the primary diagonal. Give me GoLang implementation for it.",
		"Number of Good Pairs: Given an array of integers nums. A pair (i,j) is called good if nums[i] == nums[j] and i < j. Return the number of good pairs. Give me GoLang implementation for it.",
		"Shuffle the Array: Given the array nums consisting of 2n elements in the form [x1,x2,...,xn,y1,y2,...,yn]. Return the array in the form [x1,y1,x2,y2,...,xn,yn]. Give me GoLang implementation for it.",
		"Sum of All Odd Length Subarrays: Given an array of positive integers arr, calculate the sum of all possible odd-length subarrays. Give me GoLang implementation for it.",
		"Check If Two String Arrays are Equivalent: Given two string arrays word1 and word2, return true if the two arrays represent the same string, and false otherwise. A string is represented by an array if the array elements concatenated in order forms the string. Give me GoLang implementation for it.",
		"Concatenation of Array: Given an integer array nums of length n, you want to create an array ans of length 2n where ans[i] == nums[i] and ans[i + n] == nums[i] for 0 <= i < n (0-indexed). Give me GoLang implementation for it.",
		"Find the Highest Altitude: There is a biker going on a road trip. The road trip consists of n + 1 points at different altitudes. The biker starts his trip on point 0 with altitude equal 0. You are given an integer array gain of length n where gain[i] is the net gain in altitude between points i​​​​​​ and i + 1 for all (0 <= i < n). Return the highest altitude of a point. Give me GoLang implementation for it.",
		"Maximum Nesting Depth of the Parentheses: A string is a valid parentheses string (denoted VPS) if it meets one of the following: It is an empty string \"\", or a single character not equal to \"(\" or \")\", It can be written as AB (A concatenated with B), where A and B are VPS's, or It can be written as (A), where A is a VPS. You are given a VPS represented as string s. Return the nesting depth of s. Running Sum of 1d Array: Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]…nums[i]). Return the running sum of nums. Give me GoLang implementation for it.",
		"Count Largest Group: Given an integer n. Each number from 1 to n is grouped according to the sum of its digits. Return how many groups have the largest size. Give me GoLang implementation for it.",
		"How Many Numbers Are There?: Given an integer n. We can split n into 2 digits positive integers by removing some (possibly zero) digits from n. Return the minimum number of positive integers we can split n into such that the sum of the numbers is n. Give me GoLang implementation for it.",
		"Number of Steps to Reduce a Number to Zero: Given a non-negative integer num, return the number of steps to reduce it to zero. If the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it. Give me GoLang implementation for it.",
		"Create Target Array in the Given Order: Given two arrays of integers nums and index. Your task is to create target array under the following rules: Initially target array is empty. From left to right read nums[i] and index[i], insert at index index[i] the value nums[i] in target array. Repeat the previous step until there are no elements to read in nums and index. Return the target array. Give me GoLang implementation for it.",
		"Find the Smallest Divisor Given a Threshold: Given an array of integers nums and an integer threshold, we will choose a positive integer divisor and divide all the array by it and sum the result of the division. Find the smallest divisor such that the result mentioned above is less than or equal to threshold. Give me GoLang implementation for it.",
		"Decrypt String from Alphabet to Integer Mapping: Given a string s formed by digits ('0' - '9') and '#' . We want to map s to English lowercase characters as follows: Characters ('a' to 'i') are represented by ('1' to '9') respectively. Characters ('j' to 'z') are represented by ('10#' to '26#') respectively. Return the string formed after mapping. Give me GoLang implementation for it.",
		"Find Numbers with Even Number of Digits: Given an array nums of integers, return how many of them contain an even number of digits. Give me GoLang implementation for it.",
		"Matrix Cells in Distance Order: We are given rows x cols matrix representing a field of cells. Each cell has a positive integer representing the amount of light that cell emits. The distance between two cells is the Manhattan distance. We want to order the cells by their distance from (0, 0). The distance between two cells (x1, y1) and (x2, y2) is |x1 - x2| + |y1 - y2|. Return the sorted list of cells. Give me GoLang implementation for it.",
		"Number of Steps to Reduce a Number in Binary Representation to One: Given a number s in their binary representation. Return the number of steps to reduce it to 1 under the following rules: If the current number is even, you have to divide it by 2. If the current number is odd, you have to add 1 to it. It's guaranteed that you can always reach to one for all testcases. Give me GoLang implementation for it.",
		"Minimum Operations to Make Array Equal: You have an array arr of length n where arr[i] = (2 * i) + 1 for all valid values of i (i.e., 0 <= i < n). In one operation, you can select two indices x and y where 0 <= x, y < n and subtract 1 from arr[x] and add 1 to arr[y] (i.e., perform arr[x] -=1 and arr[y] += 1). The goal is to make all the elements of the array equal. It is guaranteed that all the elements of the array can be made equal using some operations. Return the minimum number of operations needed to make all the elements of arr equal. Give me GoLang implementation for it.",
		"Relative Sort Array: Given two arrays arr1 and arr2, the elements of arr2 are distinct, and all elements in arr2 are also in arr1. Sort the elements of arr1 such that the relative ordering of items in arr1 are the same as in arr2. Elements that don't appear in arr2 should be placed at the end of arr1 in ascending order. Give me GoLang implementation for it.",
		"Sort Array By Parity: Given an array A of non-negative integers, return an array consisting of all the even elements of A, followed by all the odd elements of A. You may return any answer array that satisfies this condition. Give me GoLang implementation for it.",
		"Sort Array By Parity II: Given an array A of non-negative integers, half of the integers in A are odd, and half of the integers are even. Sort the array so that whenever A[i] is odd, i is odd; and whenever A[i] is even, i is even. Give me GoLang implementation for it.",
		"Sort Integers by The Number of 1 Bits: Given an integer array arr. You have to sort the integers in the array in ascending order by the number of 1's in their binary representation and in case of two or more integers have the same number of 1's you have to sort them in ascending order. Return the sorted array. Give me GoLang implementation for it.",
		"Squares of a Sorted Array: Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order. Give me GoLang implementation for it.",
		"Height Checker: Students are asked to stand in non-decreasing order of heights for an annual photo. Return the minimum number of students that must move in order for all students to be standing in non-decreasing order of height. Give me GoLang implementation for it.",
		"Add to Array-Form of Integer: For a non-negative integer X, the array-form of X is an array of its digits in left to right order. For example, if X = 1231, then the array form is [1,2,3,1]. Given the array-form A of a non-negative integer X, return the array-form of the integer X+K. Give me GoLang implementation for it.",
		"Find Common Characters: Given an array A of strings made only from lowercase letters, return a list of all characters that show up in all strings within the list (including duplicates). For example, if a character occurs 3 times in all strings but not 4 times, you need to include that character three times in the final answer. Give me GoLang implementation for it.",
		"Number of Students Doing Homework at a Given Time: Given two integer arrays startTime and endTime and an integer queryTime. The ith student started doing their homework at the time startTime[i] and finished it at time endTime[i]. Return the number of students doing their homework at time queryTime. More formally, return the number of students where queryTime lays in the interval [startTime[i], endTime[i]] inclusive. Give me GoLang implementation for it.",
		"Count Negative Numbers in a Sorted Matrix: Given a m * n matrix grid which is sorted in non-increasing order both row-wise and column-wise, return the number of negative numbers in grid. Give me GoLang implementation for it.",
		"Minimum Time Visiting All Points: On a plane, there are n points with integer coordinates points[i] = [xi, yi]. Return the minimum time in seconds to visit all the points in the order given by points. Give me GoLang implementation for it.",
		"Number of Students Doing Homework at a Given Time: Given two integer arrays startTime and endTime and an integer queryTime. The ith student started doing their homework at the time startTime[i] and finished it at time endTime[i]. Return the number of students doing their homework at time queryTime. More formally, return the number of students where queryTime lays in the interval [startTime[i], endTime[i]] inclusive. Give me GoLang implementation for it.",
		"Smaller Numbers Than Current: Given the array nums, for each nums[i] find out how many numbers in the array are smaller than it. That is, for each nums[i] you have to count the number of valid j's such that j != i and nums[j] < nums[i]. Give me GoLang implementation for it.",
		"How Many Numbers Are Smaller Than the Current Number: Given the array nums, for each nums[i] find out how many numbers in the array are smaller than it. That is, for each nums[i] you have to count the number of valid j's such that j != i and nums[j] < nums[i]. Give me GoLang implementation for it.",
		"Create Target Array in the Given Order: Given two arrays of integers nums and index. Your task is to create target array under the following rules: Give me GoLang implementation for it.",
		"Initially target array is empty. From left to right read nums[i] and index[i], insert at index index[i] the value nums[i] in target array. Repeat the previous step until there are no elements to read in nums and index. Return the target array. Find N Unique Integers Sum up to Zero: Given an integer n, return any array containing n unique integers such that they add up to 0. Give me GoLang implementation for it.",
		"Matrix Diagonal Sum: Given a square matrix mat, return the sum of the matrix diagonals. Only include the sum of all the elements on the primary diagonal and all the elements on the secondary diagonal that are not part of the primary diagonal. Give me GoLang implementation for it.",
		"Number of Good Pairs: Given an array of integers nums. A pair (i,j) is called good if nums[i] == nums[j] and i < j. Return the number of good pairs. Give me GoLang implementation for it.",
		"Shuffle the Array: Given the array nums consisting of 2n elements in the form [x1,x2,...,xn,y1,y2,...,yn]. Return the array in the form [x1,y1,x2,y2,...,xn,yn]. Give me GoLang implementation for it.",
		"Sum of All Odd Length Subarrays: Given an array of positive integers arr, calculate the sum of all possible odd-length subarrays. Give me GoLang implementation for it.",
		"Check If Two String Arrays are Equivalent: Given two string arrays word1 and word2, return true if the two arrays represent the same string, and false otherwise. A string is represented by an array if the array elements concatenated in order forms the string. Give me GoLang implementation for it.",
		"Concatenation of Array: Given an integer array nums of length n, you want to create an array ans of length 2n where ans[i] == nums[i]. Give me GoLang implementation for it.",
		"What is an array in programming? Give me Golang code for it.",
		"How do you declare an array in various programming languages? Give me Golang code for it.",
		"What is the difference between a static array and a dynamic array? Give me Golang code for it.",
		"How do you access elements in an array? Give me Golang code for it.",
		"What is the index of the first element in an array? Give me Golang code for it.",
		"How do you find the length of an array? Give me Golang code for it.",
		"What is the time complexity of accessing an element in an array? Give me Golang code for it.",
		"How do you insert an element into an array? Give me Golang code for it.",
		"How do you delete an element from an array? Give me Golang code for it.",
		"What is the difference between an array and a linked list? Give me Golang code for it.",
		"How do you initialize an array with values in different programming languages? Give me Golang code for it.",
		"What is a multi-dimensional array? Give me Golang code for it.",
		"How do you access elements in a multi-dimensional array? Give me Golang code for it.",
		"What is the difference between a jagged array and a multi-dimensional array? Give me Golang code for it.",
		"How do you iterate over an array? Give me Golang code for it.",
		"What is the maximum number of dimensions an array can have? Give me Golang code for it.",
		"How do you sort an array in ascending order? Give me Golang code for it.",
		"How do you sort an array in descending order? Give me Golang code for it.",
		"What is a sparse array? Give me Golang code for it.",
		"How do you find the maximum element in an array? Give me Golang code for it.",
		"How do you find the minimum element in an array? Give me Golang code for it.",
		"How do you reverse an array? Give me Golang code for it.",
		"How do you check if an array contains a specific element? Give me Golang code for it.",
		"How do you merge two arrays? Give me Golang code for it.",
		"How do you find the sum of all elements in an array? Give me Golang code for it.",
		"How do you find the average of all elements in an array? Give me Golang code for it.",
		"How do you find the median of elements in an array? Give me Golang code for it.",
		"How do you find the mode of elements in an array? Give me Golang code for it.",
		"How do you find the frequency of each element in an array? Give me Golang code for it.",
		"How do you remove duplicates from an array? Give me Golang code for it.",
		"How do you find the intersection of two arrays? Give me Golang code for it.",
		"How do you find the union of two arrays? Give me Golang code for it.",
		"How do you find the difference of two arrays? Give me Golang code for it.",
		"How do you rotate elements in an array? Give me Golang code for it.",
		"How do you shuffle elements in an array? Give me Golang code for it.",
		"How do you implement a stack using an array? Give me Golang code for it.",
		"How do you implement a queue using an array? Give me Golang code for it.",
		"How do you implement a circular buffer using an array? Give me Golang code for it.",
		"How do you implement a dynamic array? Give me Golang code for it.",
		"How do you implement a sparse array? Give me Golang code for it.",
		"How do you implement a priority queue using an array? Give me Golang code for it.",
		"How do you implement a matrix using a 1D array? Give me Golang code for it.",
		"How do you implement a matrix transpose using an array? Give me Golang code for it.",
		"How do you implement a matrix multiplication using arrays? Give me Golang code for it.",
		"How do you implement a sparse matrix using an array? Give me Golang code for it.",
		"How do you implement a sparse matrix multiplication using arrays? Give me Golang code for it.",
		"How do you implement a sparse matrix addition using arrays? Give me Golang code for it.",
		"How do you implement a sparse matrix transpose using an array? Give me Golang code for it.",
		"How do you implement a sparse matrix conversion to a dense matrix using an array? Give me Golang code for it.",
		"How do you implement a sparse matrix conversion to a triplet representation using an array? Give me Golang code for it.",
	}

	fmt.Println("Length of the questions: ", len(questions))
	for _, question := range questions {
		fmt.Println("Processing for: ", question)

		valueStory := "{\"project\":\"9de5e1e6-97fd-4f6e-a186-4d13eae39288\",\"title\":\"" + question + "\",\"storyType\":\"Back end\",\"domain\":\"Development\",\"expectedTime\":0}"
		_ = writer.WriteField("userStory", valueStory)
		err := writer.Close()
		if err != nil {
			fmt.Println(err)
			return
		}

		client := &http.Client{}
		req, err := http.NewRequest(method, url, payload)

		if err != nil {
			fmt.Println(err)
			return
		}
		req.Header.Add("Accept", "application/json, text/plain, */*")
		req.Header.Add("Accept-Language", "en-GB,en-US;q=0.9,en;q=0.8")
		req.Header.Add("Connection", "keep-alive")
		req.Header.Add("Cookie", "AzureAppProxyAnalyticCookie_48b159c3-9e1e-47a4-bb66-1197e604f374_https_1.3=4|6Oksvk0FVx+0iJeVFGLqxDJsBuuzzr7LdRrWvLqzvuIiL25/HBaQRGxPf4IMKf07rfJpkpCjRo287gd/lxmPoWjINhETi8ZgGlwVFDaokAWpJJEfEpa3ad4LyX07mJEam47d56OvM7UkEKlvDa03Pg==; _ga=GA1.2.841991317.1710239967; _gid=GA1.2.1114055079.1710239967; _token=FF8ycp_448oaVHICwlIUHE-66GnHSgBEjrjitffOHrI; user-info=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjJjMzAxOGMwLWNhNTMtNDRhMC04N2NjLTdlOGY3ZDRhZTFkMSIsImlzUmVwb3J0QWRtaW4iOmZhbHNlLCJpc0FkbWluIjpmYWxzZSwiaXNTdXBlcmFkbWluIjpmYWxzZSwiZXhwIjoxNzIwNjA3OTc1fQ; AzureAppProxyAnalyticCookie_48b159c3-9e1e-47a4-bb66-1197e604f374_https_1.3=4|qfADs9QDsuvpPfK7rY0ZHd7UxzkxUqpYmTPcGX103svBicFdaEkuVQnU6L4B+l0b/TZ4/cVczBU1G7ehKeowueozjW2CLlmVlgBkpbY8ndVCz0vko4c2xXJ10nowQOvpdZCb8rRrHz34MgxPwOFANg==")
		req.Header.Add("Origin", "https://aide.imagine.tech")
		req.Header.Add("Referer", "https://aide.imagine.tech/app/project/9de5e1e6-97fd-4f6e-a186-4d13eae39288")
		req.Header.Add("Sec-Fetch-Dest", "empty")
		req.Header.Add("Sec-Fetch-Mode", "cors")
		req.Header.Add("Sec-Fetch-Site", "same-origin")
		req.Header.Add("User-Agent", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36")
		req.Header.Add("sec-ch-ua", "\"Chromium\";v=\"122\", \"Not(A:Brand\";v=\"24\", \"Google Chrome\";v=\"122\"")
		req.Header.Add("sec-ch-ua-mobile", "?0")
		req.Header.Add("sec-ch-ua-platform", "\"macOS\"")

		req.Header.Set("Content-Type", writer.FormDataContentType())
		res, err := client.Do(req)
		if err != nil {
			fmt.Println("error while making request: ", err)
			return
		}
		defer res.Body.Close()

		body, err := ioutil.ReadAll(res.Body)
		if err != nil {
			fmt.Println("error while reading the body: ", err)
			return
		}

		fmt.Println("Done creating story.", string(body))
		delay := rand.Intn(max-min) + min
		fmt.Println("Sleeping for ", delay, " mins")
		time.Sleep(time.Duration(delay) * time.Minute)
	}
}
